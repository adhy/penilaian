<?php

if (!defined('BASEPATH'))
    exit('No direct script access allowed');

class Indikator extends CI_Controller
{
    Public $tahun;
    function __construct()
    {
        parent::__construct();
        is_login();
        $this->load->model('Indikator_model');
        $this->load->library('form_validation');        
	$this->load->library('datatables');
    }

    public function index()
    {
        $this->template->load('template','indikator/v_indikator_list');
    } 
    
    public function json() {
        $this->tahun=$this->session->userdata('tahun');
        header('Content-Type: application/json');
        echo $this->Indikator_model->json($this->tahun);
    }

    public function read($id) 
    {
        $row = $this->Indikator_model->get_by_id($id);
        if ($row) {
            $data = array(
		'nama_level' => $row->nama_level,
		'indikator' => $row->indikator,
		'tahun' => $row->tahun,
	    );
            $this->template->load('template','indikator/v_indikator_read', $data);
        } else {
            $this->session->set_flashdata('message', 'Record Not Found');
            redirect(site_url('indikator'));
        }
    }

    public function create() 
    {
        $data = array(
            'button' => 'Simpan',
            'action' => site_url('indikator/create_action'),
	    'id_indikator' => set_value('id_indikator'),
	    'nama_level' => set_value('nama_level'),
	    'indikator' => set_value('indikator'),
	    'tahun' => set_value('tahun'),
        'SatOption'=>$this->Indikator_model->getsatker()
	);
        $this->template->load('template','indikator/v_indikator_form', $data);
    }
    
    public function create_action() 
    {
        $this->_rules();

        if ($this->form_validation->run() == FALSE) {
            $this->create();
        } else {
            $data = array(
		'id_user_level' => $this->input->post('nama_level',TRUE),
		'indikator' => $this->input->post('indikator',TRUE),
		'tahun' => $this->input->post('tahun',TRUE),
	    );

            $this->Indikator_model->insert($data);
            notif('0');
            redirect(site_url('indikator'));
        }
    }
    
    public function update($id) 
    {
        $row = $this->Indikator_model->get_by_id($id);

        if ($row) {
            $data = array(
                'button' => 'Perbaharui',
                'action' => site_url('indikator/update_action'),
		'id_indikator' => set_value('id_indikator', $row->id_indikator),
		//'nama_level' => set_value('nama_level', $row->id_user_level),
		'indikator' => set_value('indikator', $row->indikator),
		'tahun' => set_value('tahun', $row->tahun),
        'SatOption'=>$this->Indikator_model->getsatker(),
        'SatOptionSel1' => $row->id_user_level,
	    );
            $this->template->load('template','indikator/v_indikator_form', $data);
        } else {
            notif('1');
            redirect(site_url('indikator'));
        }
    }
    
    public function update_action() 
    {
        $this->_rules();

        if ($this->form_validation->run() == FALSE) {
            $this->update($this->input->post('id_indikator', TRUE));
        } else {
            $data = array(
		'id_user_level' => $this->input->post('nama_level',TRUE),
		'indikator' => $this->input->post('indikator',TRUE),
		'tahun' => $this->input->post('tahun',TRUE),
	    );

            $this->Indikator_model->update($this->input->post('id_indikator', TRUE), $data);
            notif('0');
            redirect(site_url('indikator'));
        }
    }
    
    public function delete($id) 
    {
        $row = $this->Indikator_model->get_by_id($id);

        if ($row) {
            $this->Indikator_model->delete($id);
            notif('0');
            redirect(site_url('indikator'));
        } else {
            notif('1');
            redirect(site_url('indikator'));
        }
    }

    public function _rules() 
    {
	$this->form_validation->set_rules('nama_level', 'nama level', 'trim|required');
	$this->form_validation->set_rules('indikator', 'indikator', 'trim|required');
	$this->form_validation->set_rules('tahun', 'tahun', 'trim|required');

	$this->form_validation->set_rules('id_indikator', 'id indikator', 'trim');
	$this->form_validation->set_error_delimiters('<div class="has-error"><label class="text-danger"><i class="fa fa-times-circle-o"></i> ', '</label></div>');
    }

}

/* End of file Indikator.php */
/* Location: ./application/controllers/Indikator.php */
/* Please DO NOT modify this information : */
/* Generated by Harviacode Codeigniter CRUD Generator 2022-09-06 08:55:18 */
/* http://harviacode.com */