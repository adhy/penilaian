<?php

if (!defined('BASEPATH'))
    exit('No direct script access allowed');

class Satker extends CI_Controller
{
    function __construct()
    {
        parent::__construct();
        is_login();
        $this->load->model('Satker_model');
        $this->load->library('form_validation');        
	$this->load->library('datatables');
    }

    public function index()
    {
        $this->template->load('template','satker/v_satker_list');
    } 
    
    public function json() {
        header('Content-Type: application/json');
        echo $this->Satker_model->json();
    }

    public function read($id) 
    {
        $row = $this->Satker_model->get_by_id($id);
        if ($row) {
            $data = array(
		'nama_level' => $row->nama_level,
		'satker' => $row->satker,
	    );
            $this->template->load('template','satker/v_satker_read', $data);
        } else {
            notif('1');
            redirect(site_url('satker'));
        }
    }

    public function create() 
    {
        $data = array(
            'button' => 'Simpan',
            'action' => site_url('satker/create_action'),
            'id_satker' => set_value('id_satker',TRUE),
	    'nama_level' => set_value('nama_level'),
	    'satker' => set_value('satker'),
        'SatOptionSel1'=>null,
	);
        $this->template->load('template','satker/v_satker_form', $data);
    }
    
    public function create_action() 
    {
        $this->_rules();

        if ($this->form_validation->run() == FALSE) {
            $this->create();
        } else {
            $data = array(
		'id_user_level' => $this->input->post('nama_level',TRUE),
		'satker' => $this->input->post('satker',TRUE),
	    );

            $this->Satker_model->insert($data);
            notif('0');
            redirect(site_url('satker'));
        }
    }
    
    public function update($id) 
    {
        $row = $this->Satker_model->get_by_id($id);

        if ($row) {
            $data = array(
                'button' => 'Perbaharui',
                'action' => site_url('satker/update_action'),
		'id_satker' => set_value('id_satker', $row->id_satker),
		'nama_level' => set_value('nama_level', $row->id_user_level),
		'satker' => set_value('satker', $row->satker),
	    );
            $this->template->load('template','satker/v_satker_form', $data);
        } else {
            notif('1');
            redirect(site_url('satker'));
        }
    }
    
    public function update_action() 
    {
        $this->_rules();

        if ($this->form_validation->run() == FALSE) {
            $this->update($this->input->post('', TRUE));
        } else {
            $data = array(
		'id_user_level' => $this->input->post('nama_level',TRUE),
		'satker' => $this->input->post('satker',TRUE),
	    );

            $this->Satker_model->update($this->input->post('id_satker', TRUE), $data);
            notif('0');
            redirect(site_url('satker'));
        }
    }
    
    public function delete($id) 
    {
        $row = $this->Satker_model->get_by_id($id);

        if ($row) {
            $this->Satker_model->delete($id);
            notif('2');
            redirect(site_url('satker'));
        } else {
            notif('1');
            redirect(site_url('satker'));
        }
    }

    public function _rules() 
    {
	$this->form_validation->set_rules('nama_level', 'nama level', 'trim|required');
	$this->form_validation->set_rules('satker', 'satker', 'trim|required');

	$this->form_validation->set_rules('id_satker', 'id', 'trim');
	$this->form_validation->set_error_delimiters('<div class="has-error"><label class="text-danger"><i class="fa fa-times-circle-o"></i> ', '</label></div>');
    }

}

/* End of file Satker.php */
/* Location: ./application/controllers/Satker.php */
/* Please DO NOT modify this information : */
/* Generated by Harviacode Codeigniter CRUD Generator 2022-09-06 08:20:08 */
/* http://harviacode.com */